package OneLang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCustomer = createDescriptorForCustomer();
  /*package*/ final ConceptDescriptor myConceptEligibility = createDescriptorForEligibility();
  /*package*/ final ConceptDescriptor myConceptHealthBenefit = createDescriptorForHealthBenefit();
  /*package*/ final ConceptDescriptor myConceptHealthCharge = createDescriptorForHealthCharge();
  /*package*/ final ConceptDescriptor myConceptPlan = createDescriptorForPlan();
  /*package*/ final ConceptDescriptor myConceptPolicyWording = createDescriptorForPolicyWording();
  /*package*/ final ConceptDescriptor myConceptProduct = createDescriptorForProduct();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCustomer, myConceptEligibility, myConceptHealthBenefit, myConceptHealthCharge, myConceptPlan, myConceptPolicyWording, myConceptProduct);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.Customer:
        return myConceptCustomer;
      case LanguageConceptSwitch.Eligibility:
        return myConceptEligibility;
      case LanguageConceptSwitch.HealthBenefit:
        return myConceptHealthBenefit;
      case LanguageConceptSwitch.HealthCharge:
        return myConceptHealthCharge;
      case LanguageConceptSwitch.Plan:
        return myConceptPlan;
      case LanguageConceptSwitch.PolicyWording:
        return myConceptPolicyWording;
      case LanguageConceptSwitch.Product:
        return myConceptProduct;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForCustomer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("OneLang", "Customer", 0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad1079f7L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9a05a2c1-0c2b-4d6c-9ee7-a74b3628979b(OneLang.structure)/8937954300249799159");
    b.prop("dob", 0x7c09fe14ad1079f8L, "8937954300249799160");
    b.prop("gender", 0x7c09fe14ad1079fcL, "8937954300249799164");
    b.associate("spouse", 0x7c09fe14ad107a0fL).target(0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad1079f7L).optional(true).origin("8937954300249799183").done();
    b.alias("customer");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEligibility() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("OneLang", "Eligibility", 0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad107c6eL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9a05a2c1-0c2b-4d6c-9ee7-a74b3628979b(OneLang.structure)/8937954300249799790");
    b.prop("release_date", 0x7c09fe14ad107c82L, "8937954300249799810");
    b.associate("product", 0x7c09fe14ad107c7dL).target(0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad1079d1L).optional(false).origin("8937954300249799805").done();
    b.aggregate("policy_wording", 0x7c09fe14ad107c73L).target(0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad107c72L).optional(false).ordered(true).multiple(true).origin("8937954300249799795").done();
    b.alias("eligibility");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHealthBenefit() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("OneLang", "HealthBenefit", 0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad107a9eL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9a05a2c1-0c2b-4d6c-9ee7-a74b3628979b(OneLang.structure)/8937954300249799326");
    b.prop("hospital_coverage", 0x7c09fe14ad107ac0L, "8937954300249799360");
    b.aggregate("charges", 0x7c09fe14ad107aa5L).target(0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad107a8eL).optional(true).ordered(true).multiple(true).origin("8937954300249799333").done();
    b.alias("health benefit");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHealthCharge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("OneLang", "HealthCharge", 0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad107a8eL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9a05a2c1-0c2b-4d6c-9ee7-a74b3628979b(OneLang.structure)/8937954300249799310");
    b.prop("treatment", 0x7c09fe14ad107a92L, "8937954300249799314");
    b.alias("charge");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlan() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("OneLang", "Plan", 0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad1079eaL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9a05a2c1-0c2b-4d6c-9ee7-a74b3628979b(OneLang.structure)/8937954300249799146");
    b.prop("yearly_maximum_limit", 0x7c09fe14ad107a6cL, "8937954300249799276");
    b.prop("area_of_cover", 0x7c09fe14ad107a7eL, "8937954300249799294");
    b.alias("plan");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPolicyWording() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("OneLang", "PolicyWording", 0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad107c72L);
    b.class_(false, false, false);
    b.origin("r:9a05a2c1-0c2b-4d6c-9ee7-a74b3628979b(OneLang.structure)/8937954300249799794");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProduct() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("OneLang", "Product", 0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad1079d1L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9a05a2c1-0c2b-4d6c-9ee7-a74b3628979b(OneLang.structure)/8937954300249799121");
    b.prop("lob", 0x7c09fe14ad107c49L, "8937954300249799753");
    b.aggregate("plans", 0x7c09fe14ad1079f4L).target(0xc4bcb11ff1394de7L, 0x844230891be7cfe2L, 0x7c09fe14ad1079eaL).optional(false).ordered(true).multiple(true).origin("8937954300249799156").done();
    b.alias("product");
    return b.create();
  }
}
